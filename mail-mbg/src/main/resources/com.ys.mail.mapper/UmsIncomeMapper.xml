<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ys.mail.mapper.UmsIncomeMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ys.mail.entity.UmsIncome">
        <id column="income_id" property="incomeId"/>
        <result column="user_id" property="userId"/>
        <result column="income" property="income"/>
        <result column="expenditure" property="expenditure"/>
        <result column="balance" property="balance"/>
        <result column="original" property="original"/>
        <result column="integral" property="integral"/>
        <result column="today_income" property="todayIncome"/>
        <result column="all_income" property="allIncome"/>
        <result column="income_type" property="incomeType"/>
        <result column="detail_source" property="detailSource"/>
        <result column="income_no" property="incomeNo"/>
        <result column="order_trade_no" property="orderTradeNo"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
        <result column="origin_type" property="originType"/>
        <result column="pay_type" property="payType"/>
        <result column="flash_promotion_pdt_id" property="flashPromotionPdtId"/>
    </resultMap>

    <resultMap id="UmsIncomeVOMap" type="com.ys.mail.model.vo.UmsIncomeSumVO">
        <result column="all_income" property="allIncome"/>
<!--        <result column="balance" property="balance"/>-->
<!--        <result column="today_income" property="todayIncome"/>-->
<!--        <result column="invite_income_sum" property="inviteIncomeSum"/>-->
<!--        <result column="sale_income_sum" property="saleIncomeSum"/>-->
<!--        <result column="expenditure_sum" property="expenditureSum"/>-->
<!--        <result column="general_income_sum" property="generalIncomeSum"/>-->
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        income_id, user_id, income, expenditure, original, integral, balance, today_income, all_income, income_type, detail_source,
        income_no, order_trade_no, create_time, update_time, deleted, origin_type ,pay_type,remark,flash_promotion_pdt_id
    </sql>

    <select id="selectNewestByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ums_income
        where user_id = #{userId}
        order by income_id desc
        limit 1;
    </select>

    <select id="selectLatestByUserIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        ums_income
        WHERE
        income_id IN (
        SELECT MAX( income_id ) FROM ums_income WHERE user_id IN (
        <foreach collection="userIds" item="userId" separator=",">
            #{userId}
        </foreach>
        ) GROUP BY user_id
        );
    </select>

    <select id="selectUmsIncomeSumById" resultMap="UmsIncomeVOMap">
        SELECT COALESCE(sum(CASE WHEN t.income_type = '0' THEN t.income ELSE 0 END), 0)      invite_income_sum,
               COALESCE(sum(CASE WHEN t.income_type = '1' THEN t.income ELSE 0 END), 0)      sale_income_sum,
               COALESCE(sum(CASE WHEN t.income_type = '2' THEN t.expenditure ELSE 0 END), 0) expenditure_sum,
               COALESCE(sum(CASE WHEN t.income_type = '3' THEN t.income ELSE 0 END), 0)      general_income_sum
        FROM ums_income t
        WHERE t.user_id = #{userId}
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO
        `ums_income`(`income_id`, `user_id`, `income`, `expenditure`, `balance`, `today_income`, `all_income`,
        `income_type`, `detail_source`, `income_no`, `order_trade_no`, `deleted`, `create_time`,`pay_type`)
        VALUES
        <foreach collection="list" item="o" index="index" separator="," close=";">
            (
            #{o.incomeId}
            ,#{o.userId}
            ,#{o.income}
            ,#{o.expenditure}
            ,#{o.balance}
            ,#{o.todayIncome}
            ,#{o.allIncome}
            ,#{o.incomeType}
            ,#{o.detailSource}
            ,#{o.incomeNo}
            ,#{o.orderTradeNo}
            ,0
            ,now()
            ,#{o.payType}
            )
        </foreach>
    </insert>

    <select id="getPage" resultType="com.ys.mail.model.admin.vo.UmsIncomeVO">
        SELECT ui.income_id,
               ui.user_id,
               ui.income,
               ui.expenditure,
               ui.balance,
               ui.today_income,
               ui.all_income,
               ui.income_type,
               ui.detail_source,
               ui.income_no,
               ui.create_time,
               ui.origin_type,
               ui.pay_type,
               ui.remark,
               uu.alipay_name,
               uu.phone
        FROM ums_income ui
                     LEFT JOIN ums_user uu ON ui.user_id = uu.user_id ${ew.customSqlSegment}
    </select>

    <!--查询订单汇总数据-->
    <select id="getIncomeCollect" resultType="com.ys.mail.model.admin.dto.excel.IncomeCollectDTO">
        SELECT user_id,
               ROUND(SUM(CASE WHEN income_type = '1' THEN income ELSE 0 END) / 100, 2)       sec_kill_income,
               ROUND(SUM(CASE WHEN income_type = '2' THEN expenditure ELSE 0 END) / 100, 2)  balance_ex,
               ROUND(SUM(CASE WHEN income_type = '4' THEN expenditure ELSE 0 END) / 100, 2)  review_deduct,
               ROUND(SUM(CASE WHEN income_type = '5' THEN income ELSE 0 END) / 100, 2)       review_refund,
               ROUND(SUM(CASE WHEN income_type = '6' THEN income ELSE 0 END) / 100, 2)       team_income,
               ROUND(SUM(CASE WHEN income_type = '7' THEN income ELSE 0 END) / 100, 2)       merchant_income,
               ROUND(SUM(CASE WHEN income_type = '8' THEN income ELSE 0 END) / 100, 2)       maker_income,
               ROUND(SUM(CASE WHEN income_type = '9' THEN expenditure ELSE 0 END) / 100, 2)  balance_pay,
               ROUND(SUM(CASE WHEN income_type = '10' THEN expenditure ELSE 0 END) / 100, 2) service_charge_deduct,
               ROUND(SUM(CASE WHEN income_type = '11' THEN income ELSE 0 END) / 100, 2)      service_charge_refund,
               ROUND(SUM(CASE
                       WHEN income_type = '2' AND DATE(create_time) = CURRENT_DATE() THEN expenditure / 100
                       ELSE 0 END), 2)                                                       small_amount
        FROM ums_income
        GROUP BY user_id
    </select>

    <!-- 获取所有用户的最新余额-->
    <select id="getUserBalance" resultType="com.ys.mail.model.admin.dto.excel.UserBalanceDTO">
        SELECT user_id,
               ROUND(balance / 100, 2) current_balance
        FROM ums_income
        WHERE income_id IN (SELECT MAX(income_id) FROM ums_income WHERE deleted = 0 GROUP BY user_id)
    </select>

    <resultMap id="freezeReMoneyResultMap" type="com.ys.mail.model.admin.vo.FreezeReMoneyVO" extends="BaseResultMap">
        <association property="umsIncome" javaType="com.ys.mail.entity.UmsIncome"
                     column="user_id" select="com.ys.mail.mapper.UmsIncomeMapper.selectNewestByUserId"/>
    </resultMap>

    <select id="selectByFreezeReMoney" resultMap="freezeReMoneyResultMap">
        select
        <include refid="Base_Column_List"/>
        from ums_income
        where income_type = 12
        and DATE_FORMAT(`create_time`, '%Y-%m-%d') = #{format}
        order by income_id desc
    </select>

    <select id="getOriginalIntegralByUserId" resultType="com.ys.mail.model.po.OriginalIntegralPO">
        SELECT
            CASE WHEN SUM(a) + SUM(c) > 0 THEN 1 ELSE 0 END cover,
            SUM(a) - SUM(c) original, SUM(b) - SUM(d) integral
        FROM (
                SELECT SUM(original) a,SUM(integral) b,0 c,0 d FROM ums_income WHERE user_id = 1471786150199955456 AND income_type IN (-2,0,1,3,5,6,7,8,11,14,15)
                UNION
                SELECT 0 a,0 b,SUM(original) c,SUM(integral) d FROM ums_income WHERE user_id = 1471786150199955456 AND income_type IN (-1,2,4,9,10,13)
        ) t
    </select>

    <select id="selectUserRate" resultType="java.lang.Long">
        SELECT SUM(a) - SUM(b) rate FROM (
             SELECT SUM(expenditure) a,0 b FROM ums_income WHERE user_id = #{userId} AND income_type = 10
             UNION
             SELECT 0 a, SUM(income) b FROM ums_income WHERE user_id = #{userId} AND income_type = 11
         ) t
    </select>
</mapper>
